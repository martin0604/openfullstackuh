{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Filter","props","filter","filterHandler","value","onChange","PersonForm","addName","name","phone","handleName","handlePhone","onSubmit","type","Person","deleteHandler","onClick","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newPhone","setNewPhone","filteredPersons","setFilteredPersons","setFilter","setMessage","useEffect","phoneService","then","response","console","log","data","deleteButton","window","confirm","element","setTimeout","event","target","person","includes","preventDefault","nameObject","number","some","find","updatedPersons","map","newMessage","catch","error","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea06018a.chunk.js","sourcesContent":["import axios from 'axios';\r\n//const baseUrl = 'http://localhost:3001/persons';\r\n//const baseUrl = 'http://localhost:3001/api/persons';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl);\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject);\r\n}\r\n\r\nconst deletePerson = (id) =>{\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create:create,\r\n    update:update,\r\n    deletePerson:deletePerson\r\n}","import React, { useState, useEffect } from 'react';\nimport phoneService from './services/phonebook';\n\nconst Filter = (props) => {\n  const {filter, filterHandler} = props;\n  return(\n  <div>\n      filter shown with: <input value={filter} onChange={filterHandler}/>\n  </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  const {addName, name, phone, handleName, handlePhone} = props;\n  return(\n    <form onSubmit={addName}>\n        <div>\n          name: <input value={name} onChange={handleName}/><br/>\n          number: <input value={phone} onChange={handlePhone}/>\n        </div>\n        <div>debug: {name}</div> \n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n  )\n}\n\nconst Person = ({id, name, phone, deleteHandler}) => {\n    return(\n      <div>\n        <label>{name} {phone}</label><button onClick={() => deleteHandler(id)}>Delete</button><br/>\n      </div>\n    )\n}\n\nconst Notification = ({message, type}) => {\n    \n  if(message == ''){\n      return null;\n  }\n\n  return (\n      <div className={type}>\n      {message}\n      </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newPhone, setNewPhone ] = useState('');\n  const [ filteredPersons, setFilteredPersons ] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [message, setMessage] = useState({message:'', type:''});\n\n  useEffect(() =>{\n    phoneService.getAll().then(response => {\n      console.log(\"Promise fulfilled\");\n      setPersons(response.data);\n      setFilteredPersons(response.data);\n    });\n  }, []);\n  \n  //New Name field handler\n  const handleNewName = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  //New Phone field handler\n  const handleNewPhone = (event) => {\n    setNewPhone(event.target.value);\n  }\n\n  const handleFilterField = (event) => {\n    console.log(event.target.value);\n    setFilter(event.target.value);\n    setFilteredPersons(persons.filter(person => person.name.includes(event.target.value)));\n    //console.log(persons.filter(person => person.name.includes(event.target.value)));\n  }\n\n  const deleteButton = (id) => {\n    if(window.confirm(\"Do you really want to delete this person from phonebook?\")){\n      phoneService.deletePerson(id).then(response =>{\n        console.log(\"Person deleted:\", response);\n        setNewName('');\n        setNewPhone('');\n        setPersons(persons.filter((element) => element.id != id));\n        setFilteredPersons(persons.filter((element) => element.id != id));\n        let newMessage = {message:`Record was deleted from phonebook.`, type:'successful'}\n        setMessage(newMessage);\n        setTimeout(() => {\n            setMessage({message:'', type:''});\n        }, 5000);\n      });\n    }  \n  }\n\n  const addName = (event) => {\n    event.preventDefault();\n    const nameObject = {\n     name: newName,\n     number: newPhone\n    }\n    \n    if(persons.some(person => person.name === newName)){\n    if(window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)){\n      let id = persons.find(element => element.name === newName).id;\n      phoneService.update(id, nameObject).then(response => {\n        setNewName('');\n        setNewPhone('');\n        setFilter('');\n        let updatedPersons = persons.map(element => {\n          if(element.name == newName){\n              let updatedObject = {\n                ...element,\n                number : newPhone\n              }\n              return updatedObject;\n          } else{\n              return element;\n          }\n        });\n        setPersons(updatedPersons);\n        setFilteredPersons(updatedPersons);\n        let newMessage = {message:`'${newName}' was updated in phonebook.`, type:'successful'}\n        setMessage(newMessage);\n        setTimeout(() => {\n            setMessage({message:'', type:''});\n        }, 5000);\n      }).catch(error => {\n        let newMessage = {message:`The record you tried to delete has already been deleted from server.`, type:'error'}\n        setMessage(newMessage);\n        setTimeout(() => {\n            setMessage({message:'', type:''});\n        }, 5000);\n        setPersons(persons.filter(person => person.id != id));\n        setFilteredPersons(persons.filter(person => person.id != id));\n      });\n    }\n    }else{\n      setPersons(persons.concat(nameObject));\n      setNewName('');\n      setNewPhone('');\n      setFilter('');\n      setFilteredPersons(persons.concat(nameObject));\n      //filteredPersons = persons;\n      phoneService.create(nameObject).then(response => {\n        console.log(\"New contact added to phonebook:\", response);\n        let newMessage = {message:`'${newName}' was added to phonebook.`, type:'successful'}\n        setMessage(newMessage);\n        setTimeout(() => {\n            setMessage({message:'', type:''});\n        }, 5000);\n      });\n    }\n    \n    console.log(\"Clicked on submit button\", event.target);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message.message} type={message.type}/>\n      <Filter filter={filter} filterHandler={handleFilterField}/>      \n      <h3>Add new Contact</h3>\n      <PersonForm \n        addName={addName}\n        name={newName}\n        phone={newPhone}\n        handleName={handleNewName}\n        handlePhone={handleNewPhone}\n      />\n      <h2>Numbers</h2>\n      { filteredPersons.map(person => \n        <Person key={person.id} id={person.id} name={person.name} phone={person.number} deleteHandler={deleteButton}/>\n      )\n      }\n      ...\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}